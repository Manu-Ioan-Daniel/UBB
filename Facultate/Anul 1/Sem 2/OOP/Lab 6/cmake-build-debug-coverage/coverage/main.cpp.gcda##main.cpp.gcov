        -:    0:Source:C:/Users/Lenovo/Documents/GitHub/UBB/Facultate/Anul 1/Sem 2/OOP/Lab 6/main.cpp
        -:    0:Graph:C:\Users\Lenovo\Documents\GitHub\UBB\Facultate\Anul 1\Sem 2\OOP\Lab 6\cmake-build-debug-coverage\CMakeFiles\Lab_6.dir\main.cpp.gcno
        -:    0:Data:C:\Users\Lenovo\Documents\GitHub\UBB\Facultate\Anul 1\Sem 2\OOP\Lab 6\cmake-build-debug-coverage\CMakeFiles\Lab_6.dir\main.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include "ui.h"
        -:    3:#define CRTDBG_MAP_ALLOC
        -:    4:#include <cstdlib>
        -:    5:#include <crtdbg.h>
        -:    6:#include "LinkedList.h"
        -:    7:#include <cassert>
        -:    8:#include <vector>
        -:    9:
        -:   10:/*
        -:   11:  Functie folosita in teste
        -:   12:  primeste vector prin valoare -> copy constructor
        -:   13:  returneaza prin valoare -> copy constructor sau move constructor
        -:   14:*/
        -:   15:template <typename MyVector>
function _Z15testCopyIterateI10LinkedListI10DisciplinaEET_S3_ called 1 returned 100% blocks executed 62%
        1:   16:MyVector testCopyIterate(MyVector v) {
        1:   17:	int totalPrice = 0;
      102:   18:	for (const auto& el : v) {
        1:   18-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   18-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
      100:   18-block  2
call    6 returned 100
      101:   18-block  3
call    7 returned 101
branch  8 taken 100
branch  9 taken 1 (fallthrough)
      100:   19:		totalPrice += el.getNrOre();
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:   19-block  0
call    3 returned 100
        -:   20:	}
        5:   21:	Disciplina d{ "total",totalPrice,"tt","tt" };
        1:   21-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   21-block  1
        1:   21-block  2
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   21-block  3
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   21-block  4
call    9 returned 1
call   10 returned 1
        1:   21-block  5
call   11 returned 1
        1:   21-block  6
call   12 returned 1
    $$$$$:   21-block  7
    $$$$$:   21-block  8
    $$$$$:   21-block  9
call   13 never executed
    $$$$$:   21-block 10
    $$$$$:   21-block 11
    $$$$$:   21-block 12
call   14 never executed
    $$$$$:   21-block 13
    $$$$$:   21-block 14
        1:   22:	v.push_back(d);
        1:   22-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        2:   23:	return v;
        1:   23-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   23-block  1
        1:   24:}
        1:   24-block  0
call    0 returned 1
    $$$$$:   24-block  1
call    1 never executed
        -:   25:
        -:   26:template <typename MyVector>
        -:   27:
function _Z13addDisciplinaI10LinkedListI10DisciplinaEEvRT_i called 2 returned 100% blocks executed 53%
        2:   28:void addDisciplina(MyVector& v, const int cate) {
      152:   29:	for (int i = 0; i<cate; i++) {
        2:   29-block  0
      150:   29-block  1
call    0 returned 150
      152:   29-block  2
branch  1 taken 150
branch  2 taken 2 (fallthrough)
    $$$$$:   29-block  3
call    3 never executed
      150:   30:		Disciplina d{ std::to_string(i) + "_denumire",i + 10,std::to_string(i)+"_type",std::to_string(i) + "_cadru" };
      150:   30-block  0
call    0 returned 150
call    1 returned 150
branch  2 taken 150 (fallthrough)
branch  3 taken 0 (throw)
      150:   30-block  1
call    4 returned 150
call    5 returned 150
branch  6 taken 150 (fallthrough)
branch  7 taken 0 (throw)
      150:   30-block  2
call    8 returned 150
call    9 returned 150
branch 10 taken 150 (fallthrough)
branch 11 taken 0 (throw)
      150:   30-block  3
call   12 returned 150
call   13 returned 150
call   14 returned 150
call   15 returned 150
call   16 returned 150
call   17 returned 150
call   18 returned 150
    $$$$$:   30-block  4
call   19 never executed
    $$$$$:   30-block  5
    $$$$$:   30-block  6
    $$$$$:   30-block  7
call   20 never executed
    $$$$$:   30-block  8
call   21 never executed
    $$$$$:   30-block  9
    $$$$$:   30-block 10
    $$$$$:   30-block 11
call   22 never executed
    $$$$$:   30-block 12
call   23 never executed
    $$$$$:   30-block 13
    $$$$$:   30-block 14
      150:   31:		v.push_back(d);
call    0 returned 150
branch  1 taken 150 (fallthrough)
branch  2 taken 0 (throw)
        -:   32:	}
        2:   33:}
        2:   33-block  0
        -:   34:
        -:   35:/*
        -:   36:Testare constructori / assignment
        -:   37:E template pentru a refolosi la diferite variante de VectorDinamic din proiect
        -:   38:*/
        -:   39:template <typename MyVector>
function _Z20testCreateCopyAssignI10LinkedListI10DisciplinaEEvv called 1 returned 100% blocks executed 55%
        1:   40:void testCreateCopyAssign() {
        1:   41:	MyVector v;//default constructor
        1:   41-block  0
call    0 returned 1
        1:   42:	addDisciplina(v, 100);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   43:	assert(v.getSize() == 100);
        1:   43-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   43-block  1
call    3 never executed
        1:   43-block  2
       1*:   44:	assert(v.get(50).getTip() == "50_type");
        1:   44-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   44-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   44-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   44-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   44-block  4
call   11 never executed
        1:   44-block  5
        1:   44-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   44-block  7
call   14 returned 1
        1:   44-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   44-block  9
call   17 returned 1
    $$$$$:   44-block 10
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   44-block 11
call   20 never executed
    $$$$$:   44-block 12
    $$$$$:   44-block 13
branch 21 never executed (fallthrough)
branch 22 never executed
    $$$$$:   44-block 14
call   23 never executed
    $$$$$:   44-block 15
        -:   45:
        1:   46:	MyVector v2{ v };//constructor de copiere
        1:   46-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   47:	assert(v2.getSize() == 100);
        1:   47-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   47-block  1
call    3 never executed
        1:   47-block  2
       1*:   48:	assert(v2.get(50).getTip() == "50_type");
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   48-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   48-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   48-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   48-block  4
call   11 never executed
        1:   48-block  5
        1:   48-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   48-block  7
call   14 returned 1
        1:   48-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   48-block  9
call   17 returned 1
    $$$$$:   48-block 10
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   48-block 11
call   20 never executed
    $$$$$:   48-block 12
    $$$$$:   48-block 13
branch 21 never executed (fallthrough)
branch 22 never executed
    $$$$$:   48-block 14
call   23 never executed
    $$$$$:   48-block 15
        -:   49:
        1:   50:	MyVector v3;//default constructor
        1:   50-block  0
call    0 returned 1
        1:   51:	v3 = v;//operator=   assignment
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   52:	assert(v3.getSize() == 100);
        1:   52-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   52-block  1
call    3 never executed
        1:   52-block  2
       1*:   53:	assert(v3.get(50).getTip() == "50_type");
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   53-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   53-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   53-block  4
call   11 never executed
        1:   53-block  5
        1:   53-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   53-block  7
call   14 returned 1
        1:   53-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   53-block  9
call   17 returned 1
    $$$$$:   53-block 10
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   53-block 11
call   20 never executed
    $$$$$:   53-block 12
    $$$$$:   53-block 13
branch 21 never executed (fallthrough)
branch 22 never executed
    $$$$$:   53-block 14
call   23 never executed
    $$$$$:   53-block 15
        -:   54:
        1:   55:	auto v4 = testCopyIterate(v3);
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   55-block  2
call    6 returned 1
    $$$$$:   55-block  3
call    7 never executed
    $$$$$:   55-block  4
       1*:   56:	assert(v4.getSize() == 101);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   56-block  0
call    3 never executed
        1:   56-block  1
       1*:   57:	assert(v4.get(50).getTip() == "50_type");
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   57-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   57-block  3
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:   57-block  4
call   11 never executed
        1:   57-block  5
        1:   57-block  6
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:   57-block  7
call   14 returned 1
        1:   57-block  8
branch 15 taken 1 (fallthrough)
branch 16 taken 0
        1:   57-block  9
call   17 returned 1
    $$$$$:   57-block 10
branch 18 never executed (fallthrough)
branch 19 never executed
    $$$$$:   57-block 11
call   20 never executed
    $$$$$:   57-block 12
    $$$$$:   57-block 13
branch 21 never executed (fallthrough)
branch 22 never executed
    $$$$$:   57-block 14
call   23 never executed
    $$$$$:   57-block 15
        1:   58:}
        1:   58-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
    $$$$$:   58-block  1
call    4 never executed
    $$$$$:   58-block  2
call    5 never executed
    $$$$$:   58-block  3
call    6 never executed
    $$$$$:   58-block  4
call    7 never executed
        -:   59:
        -:   60:/*
        -:   61:  Test pentru move constructor si move assgnment
        -:   62:*/
        -:   63:template <typename MyVector>
function _Z23testMoveConstrAssgnmentI10LinkedListI10DisciplinaEEvv called 1 returned 100% blocks executed 58%
        1:   64:void testMoveConstrAssgnment() {
        1:   65:	std::vector<MyVector> v;
        -:   66:	//adaugam un vector care este o variabila temporara
        -:   67:	//se v-a apela move constructor
        1:   68:	v.push_back(MyVector{});
        1:   68-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   68-block  1
call    4 returned 1
    $$$$$:   68-block  2
call    5 never executed
    $$$$$:   68-block  3
        -:   69:	//inseram, la fel se apeleaza move costructor de la vectorul nostru
        1:   70:	v.insert(v.begin(),MyVector{});
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   70-block  0
call    6 returned 1
    $$$$$:   70-block  1
    $$$$$:   70-block  2
    $$$$$:   70-block  3
call    7 never executed
    $$$$$:   70-block  4
       1*:   71:	assert(v.size() == 2);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   71-block  0
call    3 never executed
        1:   71-block  1
        -:   72:
        1:   73:	MyVector v2;
        1:   73-block  0
call    0 returned 1
        1:   74:	addDisciplina(v2, 50);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   75:
        1:   76:	v2 = MyVector{};//move assignment
        1:   76-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   76-block  1
call    4 returned 1
    $$$$$:   76-block  2
call    5 never executed
    $$$$$:   76-block  3
        -:   77:
       1*:   78:	assert(v2.getSize() == 0);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:   78-block  0
call    3 never executed
        1:   78-block  1
        -:   79:
        1:   80:}
        1:   80-block  0
call    0 returned 1
call    1 returned 1
    $$$$$:   80-block  1
call    2 never executed
    $$$$$:   80-block  2
call    3 never executed
        -:   81:template <typename MyVector>
function _Z7testAllI10LinkedListI10DisciplinaEEvv called 1 returned 100% blocks executed 100%
        1:   82:void testAll() {
        1:   83:	testCreateCopyAssign<MyVector>();
        1:   83-block  0
call    0 returned 1
        1:   84:	testMoveConstrAssgnment<MyVector>();
call    0 returned 1
        1:   85:}
        -:   86:
        -:   87:
function main called 1 returned 100% blocks executed 100%
        1:   88:int main() {
        1:   89:    testRepo();
        1:   89-block  0
call    0 returned 1
        1:   90:    testService();
call    0 returned 1
        1:   91:    testDisciplina();
call    0 returned 1
        1:   92:    testAll<LinkedList<Disciplina>>();
call    0 returned 1
        -:   93:
        -:   94:    // Repo r;
        -:   95:    // Validator v;
        -:   96:    // Service s{r,v};
        -:   97:    // const Ui ui{s};
        -:   98:    // ui.startUi();
        -:   99:	_CrtDumpMemoryLeaks();
        1:  100:    return 0;
        -:  101:}
        -:  102:
