        -:    0:Source:C:/Users/Lenovo/Documents/GitHub/UBB/Facultate/Anul 1/Sem 2/OOP/Lab 6/service.cpp
        -:    0:Graph:C:\Users\Lenovo\Documents\GitHub\UBB\Facultate\Anul 1\Sem 2\OOP\Lab 6\cmake-build-debug-coverage\CMakeFiles\Lab_6.dir\service.cpp.gcno
        -:    0:Data:C:\Users\Lenovo\Documents\GitHub\UBB\Facultate\Anul 1\Sem 2\OOP\Lab 6\cmake-build-debug-coverage\CMakeFiles\Lab_6.dir\service.cpp.gcda
        -:    0:Runs:1
        -:    1:
        -:    2:#include "service.h"
        -:    3:#include <algorithm>
        -:    4:#include <cassert>
        -:    5:#include <iostream>
        -:    6:
function _ZN7Service20addDisciplinaServiceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiS7_S7_ called 413 returned 100% blocks executed 53%
      413:    7:void Service::addDisciplinaService(const string& denumire,int nrOre,const string& tip,const string& cadruDidactic){
        -:    8:
      413:    9:    Validator::validateDisciplina(denumire,nrOre,tip,cadruDidactic);
      413:    9-block  0
call    0 returned 413
branch  1 taken 412 (fallthrough)
branch  2 taken 1 (throw)
      412:   10:    const Disciplina d{denumire,nrOre,tip,cadruDidactic};
      412:   10-block  0
call    0 returned 412
branch  1 taken 412 (fallthrough)
branch  2 taken 0 (throw)
      412:   10-block  1
call    3 returned 412
branch  4 taken 412 (fallthrough)
branch  5 taken 0 (throw)
      412:   10-block  2
call    6 returned 412
branch  7 taken 412 (fallthrough)
branch  8 taken 0 (throw)
      412:   10-block  3
call    9 returned 412
call   10 returned 412
call   11 returned 412
call   12 returned 412
    $$$$$:   10-block  4
    $$$$$:   10-block  5
call   13 never executed
    $$$$$:   10-block  6
    $$$$$:   10-block  7
call   14 never executed
    $$$$$:   10-block  8
      412:   11:    repo.addDisciplina(d);
call    0 returned 412
branch  1 taken 412 (fallthrough)
branch  2 taken 0 (throw)
      412:   12:    undoActions.push_back(std::make_unique<UndoAdauga>(repo,d));
      412:   12-block  0
call    0 returned 412
branch  1 taken 412 (fallthrough)
branch  2 taken 0 (throw)
      412:   12-block  1
call    3 returned 412
call    4 returned 412
branch  5 taken 412 (fallthrough)
branch  6 taken 0 (throw)
      412:   12-block  2
call    7 returned 412
call    8 returned 412
    $$$$$:   12-block  3
call    9 never executed
    $$$$$:   12-block  4
call   10 never executed
    $$$$$:   12-block  5
    $$$$$:   12-block  6
        -:   13:
      412:   14:}
call    0 returned 412
    $$$$$:   14-block  0
call    1 never executed
function _ZNK7Service22cautaDisciplinaServiceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 3 returned 100% blocks executed 67%
        3:   15:Disciplina Service::cautaDisciplinaService(const string &denumire, const string &tip) const {
        3:   15-block  0
        3:   16:    Validator::validateDisciplina(denumire,20,tip,"salut");
        3:   16-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   16-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   16-block  2
call    6 returned 3
    $$$$$:   16-block  3
call    7 never executed
    $$$$$:   16-block  4
        3:   17:    Disciplina d = repo.cautaDisciplina(denumire, tip);
        3:   17-block  0
call    0 returned 3
        3:   18:    return d;
        3:   18-block  0
        -:   19:}
function _ZN7Service25modificaDisciplinaServiceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_S7_iS7_ called 3 returned 67% blocks executed 52%
        3:   20:void Service::modificaDisciplinaService(const string &denumire, const string &tip,const string& denumireNoua,const string& tipNou,int nrOreNou,const string& cadruDidacticNou) {
        3:   20-block  0
        3:   21:    Validator::validateDisciplina(denumire,20,tip,"salut");
        3:   21-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   21-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   21-block  2
call    6 returned 3
    $$$$$:   21-block  3
call    7 never executed
    $$$$$:   21-block  4
    $$$$$:   21-block  5
        3:   22:    Validator::validateDisciplina(denumireNoua,nrOreNou,tipNou,cadruDidacticNou);
        3:   22-block  0
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1 (throw)
        2:   23:    const Disciplina& d = cautaDisciplinaService(denumire,tip);
        2:   23-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   24:    const Disciplina disciplinaNoua{denumireNoua,nrOreNou,tipNou,cadruDidacticNou};
        2:   24-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   24-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   24-block  2
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:   24-block  3
call    9 returned 2
call   10 returned 2
call   11 returned 2
call   12 returned 2
    $$$$$:   24-block  4
    $$$$$:   24-block  5
call   13 never executed
    $$$$$:   24-block  6
    $$$$$:   24-block  7
call   14 never executed
    $$$$$:   24-block  8
        2:   25:    repo.modificaDisciplina(disciplinaNoua,d);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   26:    undoActions.push_back(std::make_unique<UndoModifica>(repo,disciplinaNoua,d));
        2:   26-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   26-block  1
call    3 returned 2
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0 (throw)
        2:   26-block  2
call    7 returned 2
call    8 returned 2
    $$$$$:   26-block  3
call    9 never executed
    $$$$$:   26-block  4
call   10 never executed
    $$$$$:   26-block  5
    $$$$$:   26-block  6
        2:   27:}
call    0 returned 2
call    1 returned 2
    $$$$$:   27-block  0
call    2 never executed
    $$$$$:   27-block  1
call    3 never executed
function _ZN7Service23stergeDisciplinaServiceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 3 returned 67% blocks executed 73%
        3:   28:void Service::stergeDisciplinaService(const string &denumire, const string &tip){
        3:   28-block  0
        4:   29:    Validator::validateDisciplina(denumire,20,tip,"salut");
        3:   29-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   29-block  1
call    3 returned 3
branch  4 taken 2 (fallthrough)
branch  5 taken 1 (throw)
        2:   29-block  2
call    6 returned 2
        1:   29-block  3
call    7 returned 1
        1:   29-block  4
        1:   29-block  5
call    8 returned 0
        2:   30:    repo.stergeDisciplina(denumire,tip);
        2:   30-block  0
call    0 returned 2
        2:   31:    undoActions.push_back(std::make_unique<UndoSterge>(repo,repo.cautaDisciplina(denumire,tip)));
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   31-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   31-block  1
call    6 returned 2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
        2:   31-block  2
call   10 returned 2
call   11 returned 2
call   12 returned 2
    $$$$$:   31-block  3
call   13 never executed
    $$$$$:   31-block  4
call   14 never executed
    $$$$$:   31-block  5
call   15 never executed
    $$$$$:   31-block  6
    $$$$$:   31-block  7
        2:   32:}
function _ZNK7Service25filtrareDisciplineDupaOreEi called 1 returned 100% blocks executed 76%
        1:   33:vector<Disciplina>Service::filtrareDisciplineDupaOre(const int nrOre) const {
        1:   34:    vector<Disciplina> discipline=getAll();
        1:   34-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   35:    vector<Disciplina> disciplineFiltrate;
      101:   36:    for (const auto& d:discipline) {
        1:   36-block  0
call    0 returned 1
call    1 returned 1
      100:   36-block  1
call    2 returned 100
      100:   36-block  2
call    3 returned 100
      101:   36-block  3
call    4 returned 101
branch  5 taken 100
branch  6 taken 1 (fallthrough)
      100:   37:        if (d.getNrOre()>=nrOre) {
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:   37-block  0
branch  3 taken 50 (fallthrough)
branch  4 taken 50
       50:   38:            disciplineFiltrate.push_back(d);
       50:   38-block  0
call    0 returned 50
branch  1 taken 50 (fallthrough)
branch  2 taken 0 (throw)
        -:   39:        }
        -:   40:    }
        -:   41:
        2:   42:    return disciplineFiltrate;
        1:   42-block  0
        1:   42-block  1
        1:   43:}
        1:   43-block  0
call    0 returned 1
    $$$$$:   43-block  1
call    1 never executed
    $$$$$:   43-block  2
call    2 never executed
function _ZNK7Service35filtrareDisciplineDupaCadruDidacticERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 75%
        1:   44:vector<Disciplina> Service::filtrareDisciplineDupaCadruDidactic(const string& cadruDidactic) const {
        1:   45:    const vector<Disciplina> discipline=getAll();
        1:   45-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   46:    vector<Disciplina> disciplineFiltrate;
      101:   47:    for (const auto& d:discipline) {
        1:   47-block  0
call    0 returned 1
call    1 returned 1
      100:   47-block  1
call    2 returned 100
      100:   47-block  2
call    3 returned 100
      101:   47-block  3
call    4 returned 101
branch  5 taken 100
branch  6 taken 1 (fallthrough)
      100:   48:        if (d.getCadruDidactic()==cadruDidactic) {
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:   48-block  0
call    3 returned 100
call    4 returned 100
branch  5 taken 100 (fallthrough)
branch  6 taken 0
    $$$$$:   48-block  1
      100:   49:            disciplineFiltrate.push_back(d);
      100:   49-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
        -:   50:        }
        -:   51:    }
        -:   52:
        2:   53:    return disciplineFiltrate;
        1:   53-block  0
        1:   53-block  1
        1:   54:}
        1:   54-block  0
call    0 returned 1
    $$$$$:   54-block  1
call    1 never executed
    $$$$$:   54-block  2
call    2 never executed
function _ZNK7Service24sortareDisciplineDupaOreEv called 1 returned 100% blocks executed 86%
        1:   55:vector<Disciplina> Service::sortareDisciplineDupaOre() const {
        1:   56:    vector<Disciplina> discipline=getAll();
        1:   56-block  0
call    0 returned 1
call    1 returned 1
function _ZZNK7Service24sortareDisciplineDupaOreEvENKUlRK10DisciplinaS2_E_clES2_S2_ called 629 returned 100% blocks executed 100%
      630:   57:    std::ranges::sort(discipline,[](const Disciplina& d1, const Disciplina& d2) {return d1.getNrOre() < d2.getNrOre();});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
      629:   57-block  0
call    3 returned 629
call    4 returned 629
        1:   58:    return discipline;
        1:   58-block  0
        1:   58-block  1
    =====:   59:}
    $$$$$:   59-block  0
call    0 never executed
function _ZNK7Service29sortareDisciplineDupaDenumireEv called 1 returned 100% blocks executed 86%
        1:   60:vector<Disciplina> Service::sortareDisciplineDupaDenumire() const {
        1:   61:    vector<Disciplina> discipline=getAll();
        1:   61-block  0
call    0 returned 1
call    1 returned 1
function _ZZNK7Service29sortareDisciplineDupaDenumireEvENKUlRK10DisciplinaS2_E_clES2_S2_ called 827 returned 100% blocks executed 71%
      828:   62:    std::ranges::sort(discipline,[](const Disciplina& d1, const Disciplina& d2) {return d1.getDenumire() < d2.getDenumire();});
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
      827:   62-block  0
call    3 returned 827
call    4 returned 827
branch  5 taken 827 (fallthrough)
branch  6 taken 0 (throw)
      827:   62-block  1
call    7 returned 827
branch  8 taken 827 (fallthrough)
branch  9 taken 0 (throw)
      827:   62-block  2
call   10 returned 827
call   11 returned 827
call   12 returned 827
call   13 returned 827
      827:   62-block  3
    $$$$$:   62-block  4
    $$$$$:   62-block  5
call   14 never executed
    $$$$$:   62-block  6
        1:   63:    return discipline;
        1:   63-block  0
        1:   63-block  1
    =====:   64:}
    $$$$$:   64-block  0
call    0 never executed
function _ZNK7Service39sortareDisciplineDupaTipSiCadruDidacticEv called 1 returned 100% blocks executed 86%
        1:   65:vector <Disciplina> Service::sortareDisciplineDupaTipSiCadruDidactic() const {
        1:   66:    vector<Disciplina> discipline=getAll();
        1:   66-block  0
call    0 returned 1
call    1 returned 1
function _ZZNK7Service39sortareDisciplineDupaTipSiCadruDidacticEvENKUlRK10DisciplinaS2_E_clES2_S2_ called 500 returned 100% blocks executed 65%
        1:   67:    std::ranges::sort(discipline,[](const Disciplina& d1, const Disciplina& d2)
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
      500:   68:        {if (d1.getTip() == d2.getTip()) {
      500:   68-block  0
call    0 returned 500
branch  1 taken 500 (fallthrough)
branch  2 taken 0 (throw)
      500:   68-block  1
call    3 returned 500
branch  4 taken 500 (fallthrough)
branch  5 taken 0 (throw)
      500:   68-block  2
call    6 returned 500
call    7 returned 500
call    8 returned 500
branch  9 taken 446 (fallthrough)
branch 10 taken 54
    $$$$$:   68-block  3
    $$$$$:   68-block  4
call   11 never executed
    $$$$$:   68-block  5
call   12 never executed
      446:   69:            return d1.getCadruDidactic() < d2.getCadruDidactic();
      446:   69-block  0
call    0 returned 446
call    1 returned 446
branch  2 taken 446 (fallthrough)
branch  3 taken 0 (throw)
      446:   69-block  1
call    4 returned 446
branch  5 taken 446 (fallthrough)
branch  6 taken 0 (throw)
      446:   69-block  2
call    7 returned 446
call    8 returned 446
call    9 returned 446
call   10 returned 446
    $$$$$:   69-block  3
    $$$$$:   69-block  4
call   11 never executed
    $$$$$:   69-block  5
    $$$$$:   69-block  6
call   12 never executed
        -:   70:        }
       54:   71:        return d1.getTip() < d2.getTip();});
       54:   71-block  0
call    0 returned 54
call    1 returned 54
branch  2 taken 54 (fallthrough)
branch  3 taken 0 (throw)
       54:   71-block  1
call    4 returned 54
branch  5 taken 54 (fallthrough)
branch  6 taken 0 (throw)
       54:   71-block  2
call    7 returned 54
call    8 returned 54
call    9 returned 54
call   10 returned 54
    $$$$$:   71-block  3
    $$$$$:   71-block  4
call   11 never executed
    $$$$$:   71-block  5
        -:   72:
        1:   73:    return discipline;
        1:   73-block  0
        1:   73-block  1
    =====:   74:}
    $$$$$:   74-block  0
call    0 never executed
function _ZN7Service31adaugaDisciplinaContractServiceERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 3 returned 33% blocks executed 75%
        3:   75:void Service::adaugaDisciplinaContractService(const string &denumire){
        3:   76:    if (denumire.empty()) {
        3:   76-block  0
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
        3:   77:        throw ValidationError("Denumire Invalida!");
        1:   77-block  0
call    0 returned 1
        1:   77-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   77-block  2
call    4 returned 1
call    5 returned 1
        1:   77-block  3
call    6 returned 0
    $$$$$:   77-block  4
    $$$$$:   77-block  5
    $$$$$:   77-block  6
call    7 never executed
        -:   78:    }
      223:   79:    for (auto& d:getAll()) {
        2:   79-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
      222:   79-block  1
call    3 returned 222
      221:   79-block  2
call    4 returned 221
      223:   79-block  3
call    5 returned 223
branch  6 taken 222
branch  7 taken 1 (fallthrough)
      222:   80:        if (d.getDenumire()==denumire) {
call    0 returned 222
branch  1 taken 222 (fallthrough)
branch  2 taken 0 (throw)
      222:   80-block  0
call    3 returned 222
call    4 returned 222
branch  5 taken 1 (fallthrough)
branch  6 taken 221
    $$$$$:   80-block  1
        1:   81:            contract.adaugaDisciplinaContract(d);
        1:   81-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   82:            return;
        1:   82-block  0
        1:   82-block  1
        -:   83:        }
        -:   84:    }
        1:   85:    throw ServiceException("Nu exista disciplina cu denumirea: "+denumire);
        1:   85-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   85-block  1
call    4 returned 1
call    5 returned 1
call    6 returned 0
    $$$$$:   85-block  2
    $$$$$:   85-block  3
call    7 never executed
        -:   86:}
function _ZN7Service22golesteContractServiceEv called 1 returned 100% blocks executed 100%
        1:   87:void Service::golesteContractService() {
        1:   88:    contract.golesteContract();
        1:   88-block  0
call    0 returned 1
        1:   89:}
function _ZN7Service24genereazaContractServiceEi called 3 returned 33% blocks executed 65%
        3:   90:void Service::genereazaContractService(const int nrDiscipline) {
        3:   91:    if (nrDiscipline<=0) {
        3:   91-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        3:   92:        throw ValidationError("Numar de discipline invalid!");
        1:   92-block  0
call    0 returned 1
        1:   92-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   92-block  2
call    4 returned 1
call    5 returned 1
        1:   92-block  3
call    6 returned 0
    $$$$$:   92-block  4
    $$$$$:   92-block  5
    $$$$$:   92-block  6
call    7 never executed
        -:   93:    }
        2:   94:    if (nrDiscipline>=getAll().size()) {
        2:   94-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 1 (fallthrough)
branch  3 taken 1
        3:   95:        throw ServiceException("Numar de discipline prea mare!");
        1:   95-block  0
call    0 returned 1
        1:   95-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   95-block  2
call    4 returned 1
call    5 returned 1
        1:   95-block  3
call    6 returned 0
    $$$$$:   95-block  4
    $$$$$:   95-block  5
    $$$$$:   95-block  6
call    7 never executed
        -:   96:    }
        1:   97:    contract.genereazaContract(nrDiscipline,getAll());
        1:   97-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   97-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   97-block  2
call    7 returned 1
    $$$$$:   97-block  3
call    8 never executed
        1:   98:}
function _ZNK7Service10statisticiB5cxx11Ev called 1 returned 100% blocks executed 74%
        1:   99:std::map<string,int> Service::statistici() const{
        1:  100:    std::map<string,int> statistica;
        1:  100-block  0
call    0 returned 1
      101:  101:    for (const auto& d:getAll()) {
call    0 returned 1
call    1 returned 1
call    2 returned 1
      100:  101-block  0
call    3 returned 100
      101:  101-block  1
call    4 returned 101
branch  5 taken 100
branch  6 taken 1 (fallthrough)
      100:  102:        statistica[d.getDenumire()]++;
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  102-block  0
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:  102-block  1
call    6 returned 100
call    7 returned 100
    $$$$$:  102-block  2
call    8 never executed
    $$$$$:  102-block  3
        -:  103:    }
        1:  104:    return statistica;
        1:  104-block  0
        1:  104-block  1
    =====:  105:}
    $$$$$:  105-block  0
call    0 never executed
function _ZN7Service4undoEv called 103 returned 99% blocks executed 76%
      103:  106:void Service::undo() {
      103:  107:    if (undoActions.empty()) {
      103:  107-block  0
call    0 returned 103
branch  1 taken 1 (fallthrough)
branch  2 taken 102
        3:  108:        throw ServiceException("Nu mai exista actiuni de undo!");
        1:  108-block  0
call    0 returned 1
        1:  108-block  1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  108-block  2
call    4 returned 1
call    5 returned 1
        1:  108-block  3
call    6 returned 0
    $$$$$:  108-block  4
    $$$$$:  108-block  5
    $$$$$:  108-block  6
call    7 never executed
        -:  109:    }
      102:  110:    undoActions.back()->doUndo();
      102:  110-block  0
call    0 returned 102
call    1 returned 102
call    2 returned 102
      102:  111:    undoActions.pop_back();
call    0 returned 102
      102:  112:}
function _Z11testServicev called 1 returned 100% blocks executed 59%
        1:  113:void testService() {
        -:  114:    //test adaugare
        -:  115:
        1:  116:    Repo r;
        -:  117:    Validator v;
        1:  118:    Service s{r,v};
        1:  118-block  0
call    0 returned 1
        5:  119:    s.addDisciplinaService("mate",5,"laborator","popescu");
        1:  119-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  119-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  119-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  119-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  119-block  4
call   12 returned 1
        1:  119-block  5
call   13 returned 1
        1:  119-block  6
call   14 returned 1
    $$$$$:  119-block  7
call   15 never executed
    $$$$$:  119-block  8
    $$$$$:  119-block  9
    $$$$$:  119-block 10
call   16 never executed
    $$$$$:  119-block 11
    $$$$$:  119-block 12
    $$$$$:  119-block 13
call   17 never executed
    $$$$$:  119-block 14
    $$$$$:  119-block 15
        1:  120:    const auto& all=s.getAll();
        1:  120-block  0
call    0 returned 1
       1*:  121:    assert(all.size()==1);
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  121-block  0
call    3 never executed
        1:  121-block  1
       7*:  122:    assert(*all.begin()==Disciplina("mate",5,"laborator","popescu"));
        1:  122-block  0
        1:  122-block  1
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  122-block  2
        1:  122-block  3
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  122-block  4
        1:  122-block  5
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  122-block  6
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:  122-block  7
call   15 never executed
        1:  122-block  8
        1:  122-block  9
branch 16 taken 1 (fallthrough)
branch 17 taken 0
        1:  122-block 10
call   18 returned 1
        1:  122-block 11
branch 19 taken 1 (fallthrough)
branch 20 taken 0
        1:  122-block 12
call   21 returned 1
        1:  122-block 13
branch 22 taken 1 (fallthrough)
branch 23 taken 0
        1:  122-block 14
branch 24 taken 1 (fallthrough)
branch 25 taken 0
        1:  122-block 15
call   26 returned 1
        1:  122-block 16
branch 27 taken 1 (fallthrough)
branch 28 taken 0
        1:  122-block 17
branch 29 taken 1 (fallthrough)
branch 30 taken 0
        1:  122-block 18
call   31 returned 1
        1:  122-block 19
branch 32 taken 1 (fallthrough)
branch 33 taken 0
        1:  122-block 20
    $$$$$:  122-block 21
    $$$$$:  122-block 22
branch 34 never executed (fallthrough)
branch 35 never executed
    $$$$$:  122-block 23
call   36 never executed
    $$$$$:  122-block 24
    $$$$$:  122-block 25
branch 37 never executed (fallthrough)
branch 38 never executed
    $$$$$:  122-block 26
call   39 never executed
    $$$$$:  122-block 27
    $$$$$:  122-block 28
branch 40 never executed (fallthrough)
branch 41 never executed
    $$$$$:  122-block 29
    $$$$$:  122-block 30
branch 42 never executed (fallthrough)
branch 43 never executed
    $$$$$:  122-block 31
call   44 never executed
    $$$$$:  122-block 32
    $$$$$:  122-block 33
branch 45 never executed (fallthrough)
branch 46 never executed
    $$$$$:  122-block 34
    $$$$$:  122-block 35
branch 47 never executed (fallthrough)
branch 48 never executed
    $$$$$:  122-block 36
call   49 never executed
    $$$$$:  122-block 37
    $$$$$:  122-block 38
branch 50 never executed (fallthrough)
branch 51 never executed
    $$$$$:  122-block 39
        -:  123:    try {
       6*:  124:        s.addDisciplinaService("",-1,"","");
        1:  124-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  124-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  124-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  124-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:  124-block  4
call   12 never executed
    %%%%%:  124-block  5
call   13 never executed
    %%%%%:  124-block  6
call   14 never executed
    %%%%%:  124-block  7
        1:  124-block  8
call   15 returned 1
        1:  124-block  9
        1:  124-block 10
        1:  124-block 11
call   16 returned 1
        1:  124-block 12
        1:  124-block 13
        1:  124-block 14
call   17 returned 1
        1:  124-block 15
        1:  124-block 16
        -:  125:        //assert(false);
        1:  126:    }catch (ValidationError&) {
        1:  126-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  126-block  1
call    2 returned 1
        -:  127:        assert(true);
        1:  128:    }
call    0 returned 1
        -:  129:
        -:  130:    //test cauta disciplina
        -:  131:
        4:  132:     const Disciplina& d=s.cautaDisciplinaService("mate","laborator");
        1:  132-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  132-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  132-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  132-block  3
call    9 returned 1
        1:  132-block  4
call   10 returned 1
        1:  132-block  5
    $$$$$:  132-block  6
call   11 never executed
    $$$$$:  132-block  7
    $$$$$:  132-block  8
    $$$$$:  132-block  9
call   12 never executed
    $$$$$:  132-block 10
    $$$$$:  132-block 11
        5:  133:     const auto &d2 = Disciplina("mate",5,"laborator","popescu");
        1:  133-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  133-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  133-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  133-block  3
call    9 returned 1
call   10 returned 1
        1:  133-block  4
call   11 returned 1
        1:  133-block  5
call   12 returned 1
    $$$$$:  133-block  6
    $$$$$:  133-block  7
    $$$$$:  133-block  8
call   13 never executed
    $$$$$:  133-block  9
    $$$$$:  133-block 10
    $$$$$:  133-block 11
call   14 never executed
    $$$$$:  133-block 12
    $$$$$:  133-block 13
       1*:  134:     assert(d==d2);
        1:  134-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  134-block  1
call    3 never executed
        1:  134-block  2
        -:  135:
        -:  136:
        -:  137:    //test modifica disciplina
        -:  138:
        9:  139:    s.modificaDisciplinaService("mate","laborator","info","seminar",6,"ionescu");
        1:  139-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  139-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  139-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  139-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  139-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  139-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  139-block  6
call   18 returned 1
        1:  139-block  7
call   19 returned 1
        1:  139-block  8
call   20 returned 1
        1:  139-block  9
call   21 returned 1
        1:  139-block 10
call   22 returned 1
    $$$$$:  139-block 11
call   23 never executed
    $$$$$:  139-block 12
    $$$$$:  139-block 13
    $$$$$:  139-block 14
call   24 never executed
    $$$$$:  139-block 15
    $$$$$:  139-block 16
    $$$$$:  139-block 17
call   25 never executed
    $$$$$:  139-block 18
    $$$$$:  139-block 19
    $$$$$:  139-block 20
call   26 never executed
    $$$$$:  139-block 21
    $$$$$:  139-block 22
    $$$$$:  139-block 23
call   27 never executed
    $$$$$:  139-block 24
    $$$$$:  139-block 25
       7*:  140:    assert(*s.getAll().begin()==Disciplina("info",6,"seminar","ionescu"));
        1:  140-block  0
        1:  140-block  1
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  140-block  2
        1:  140-block  3
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  140-block  4
        1:  140-block  5
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  140-block  6
call    9 returned 1
call   10 returned 1
call   11 returned 1
call   12 returned 1
call   13 returned 1
branch 14 taken 0 (fallthrough)
branch 15 taken 1
    %%%%%:  140-block  7
call   16 never executed
        1:  140-block  8
        1:  140-block  9
branch 17 taken 1 (fallthrough)
branch 18 taken 0
        1:  140-block 10
call   19 returned 1
        1:  140-block 11
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:  140-block 12
call   22 returned 1
        1:  140-block 13
branch 23 taken 1 (fallthrough)
branch 24 taken 0
        1:  140-block 14
branch 25 taken 1 (fallthrough)
branch 26 taken 0
        1:  140-block 15
call   27 returned 1
        1:  140-block 16
branch 28 taken 1 (fallthrough)
branch 29 taken 0
        1:  140-block 17
branch 30 taken 1 (fallthrough)
branch 31 taken 0
        1:  140-block 18
call   32 returned 1
        1:  140-block 19
branch 33 taken 1 (fallthrough)
branch 34 taken 0
        1:  140-block 20
    $$$$$:  140-block 21
    $$$$$:  140-block 22
branch 35 never executed (fallthrough)
branch 36 never executed
    $$$$$:  140-block 23
call   37 never executed
    $$$$$:  140-block 24
    $$$$$:  140-block 25
branch 38 never executed (fallthrough)
branch 39 never executed
    $$$$$:  140-block 26
call   40 never executed
    $$$$$:  140-block 27
    $$$$$:  140-block 28
branch 41 never executed (fallthrough)
branch 42 never executed
    $$$$$:  140-block 29
    $$$$$:  140-block 30
branch 43 never executed (fallthrough)
branch 44 never executed
    $$$$$:  140-block 31
call   45 never executed
    $$$$$:  140-block 32
    $$$$$:  140-block 33
branch 46 never executed (fallthrough)
branch 47 never executed
    $$$$$:  140-block 34
    $$$$$:  140-block 35
branch 48 never executed (fallthrough)
branch 49 never executed
    $$$$$:  140-block 36
call   50 never executed
    $$$$$:  140-block 37
    $$$$$:  140-block 38
branch 51 never executed (fallthrough)
branch 52 never executed
    $$$$$:  140-block 39
        -:  141:    try {
      10*:  142:        s.modificaDisciplinaService("mate","laborator","","",0,"");
        1:  142-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  142-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  142-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  142-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  142-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  142-block  5
call   15 returned 1
branch 16 taken 0 (fallthrough)
branch 17 taken 1 (throw)
    %%%%%:  142-block  6
call   18 never executed
    %%%%%:  142-block  7
call   19 never executed
    %%%%%:  142-block  8
call   20 never executed
    %%%%%:  142-block  9
call   21 never executed
    %%%%%:  142-block 10
call   22 never executed
    %%%%%:  142-block 11
        1:  142-block 12
call   23 returned 1
        1:  142-block 13
        1:  142-block 14
        1:  142-block 15
call   24 returned 1
        1:  142-block 16
        1:  142-block 17
        1:  142-block 18
call   25 returned 1
        1:  142-block 19
        1:  142-block 20
        1:  142-block 21
call   26 returned 1
        1:  142-block 22
        1:  142-block 23
        1:  142-block 24
call   27 returned 1
        1:  142-block 25
        1:  142-block 26
        -:  143:        //assert(false);
        1:  144:    }catch (ValidationError&) {
        1:  144-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  144-block  1
call    2 returned 1
        -:  145:        assert(true);
        1:  146:    }
call    0 returned 1
        -:  147:
        -:  148:    //test sterge disciplina
        -:  149:
        3:  150:    s.stergeDisciplinaService("info","seminar");
        1:  150-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  150-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  150-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  150-block  3
call    9 returned 1
        1:  150-block  4
call   10 returned 1
    $$$$$:  150-block  5
call   11 never executed
    $$$$$:  150-block  6
    $$$$$:  150-block  7
    $$$$$:  150-block  8
call   12 never executed
    $$$$$:  150-block  9
    $$$$$:  150-block 10
       1*:  151:    assert(s.getAll().empty());
        1:  151-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  151-block  1
call    4 never executed
        1:  151-block  2
        -:  152:    try {
       4*:  153:        s.stergeDisciplinaService("","");
        1:  153-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  153-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  153-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1 (throw)
    %%%%%:  153-block  3
call    9 never executed
    %%%%%:  153-block  4
call   10 never executed
    %%%%%:  153-block  5
        1:  153-block  6
call   11 returned 1
        1:  153-block  7
        1:  153-block  8
        1:  153-block  9
call   12 returned 1
        1:  153-block 10
        1:  153-block 11
        -:  154:        //assert(false);
        1:  155:    }catch (ValidationError&) {
        1:  155-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  155-block  1
call    2 returned 1
        -:  156:        assert(true);
        1:  157:    }
call    0 returned 1
        -:  158:
        -:  159:    //test filtrareDupaOre
        -:  160:
      101:  161:    for (int i = 0;i<100;i++) {
        1:  161-block  0
      101:  161-block  1
branch  0 taken 100
branch  1 taken 1 (fallthrough)
      400:  162:        s.addDisciplinaService("mate"+std::to_string(i),i,"laborator","popescu");
      100:  162-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  162-block  1
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:  162-block  2
call    6 returned 100
call    7 returned 100
branch  8 taken 100 (fallthrough)
branch  9 taken 0 (throw)
      100:  162-block  3
call   10 returned 100
branch 11 taken 100 (fallthrough)
branch 12 taken 0 (throw)
      100:  162-block  4
call   13 returned 100
call   14 returned 100
call   15 returned 100
      100:  162-block  5
call   16 returned 100
      100:  162-block  6
    $$$$$:  162-block  7
call   17 never executed
    $$$$$:  162-block  8
call   18 never executed
    $$$$$:  162-block  9
    $$$$$:  162-block 10
    $$$$$:  162-block 11
call   19 never executed
    $$$$$:  162-block 12
    $$$$$:  162-block 13
    $$$$$:  162-block 14
call   20 never executed
    $$$$$:  162-block 15
    $$$$$:  162-block 16
        -:  163:    }
        1:  164:    const vector<Disciplina> disciplineFiltrate=s.filtrareDisciplineDupaOre(50);
        1:  164-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  165:    assert(disciplineFiltrate.size()==50);
        1:  165-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  165-block  1
call    3 never executed
        1:  165-block  2
       51:  166:    for (auto it=disciplineFiltrate.begin();it!=disciplineFiltrate.end();++it) {
        1:  166-block  0
call    0 returned 1
       50:  166-block  1
call    1 returned 50
       51:  166-block  2
call    2 returned 51
call    3 returned 51
branch  4 taken 50
branch  5 taken 1 (fallthrough)
      50*:  167:        assert(it->getNrOre()>=50);
       50:  167-block  0
call    0 returned 50
call    1 returned 50
branch  2 taken 50 (fallthrough)
branch  3 taken 0 (throw)
       50:  167-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 50
    %%%%%:  167-block  2
call    6 never executed
       50:  167-block  3
        -:  168:    }
        -:  169:    //test filtrareDupaCadruDidactic
        1:  170:    const vector<Disciplina> disciplineFiltrateCadruDidactic=s.filtrareDisciplineDupaCadruDidactic("popescu");
        1:  170-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  170-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  170-block  2
call    6 returned 1
    $$$$$:  170-block  3
call    7 never executed
    $$$$$:  170-block  4
    $$$$$:  170-block  5
       1*:  171:    assert(disciplineFiltrateCadruDidactic.size()==100);
        1:  171-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  171-block  1
call    3 never executed
        1:  171-block  2
      101:  172:    for (auto it=disciplineFiltrateCadruDidactic.begin();it!=disciplineFiltrateCadruDidactic.end();++it) {
        1:  172-block  0
call    0 returned 1
      101:  172-block  1
call    1 returned 101
call    2 returned 101
branch  3 taken 100
branch  4 taken 1 (fallthrough)
     100*:  173:        assert(it->getCadruDidactic()=="popescu");
      100:  173-block  0
call    0 returned 100
call    1 returned 100
branch  2 taken 100 (fallthrough)
branch  3 taken 0 (throw)
      100:  173-block  1
call    4 returned 100
branch  5 taken 100 (fallthrough)
branch  6 taken 0 (throw)
      100:  173-block  2
branch  7 taken 0 (fallthrough)
branch  8 taken 100
    %%%%%:  173-block  3
call    9 never executed
      100:  173-block  4
      100:  173-block  5
branch 10 taken 100 (fallthrough)
branch 11 taken 0
      100:  173-block  6
call   12 returned 100
      100:  173-block  7
call   13 returned 100
    $$$$$:  173-block  8
branch 14 never executed (fallthrough)
branch 15 never executed
    $$$$$:  173-block  9
call   16 never executed
    $$$$$:  173-block 10
        -:  174:    }
        -:  175:    //test sortareDisciplineDupaOre
        1:  176:    const vector<Disciplina> disciplineSortateDupaOre=s.sortareDisciplineDupaOre();
        1:  176-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  177:    assert(disciplineSortateDupaOre.size()==100);
        1:  177-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  177-block  1
call    3 never executed
        1:  177-block  2
      101:  178:    for (auto it=disciplineSortateDupaOre.begin();it!=disciplineSortateDupaOre.end();++it) {
        1:  178-block  0
call    0 returned 1
      100:  178-block  1
call    1 returned 100
      101:  178-block  2
call    2 returned 101
call    3 returned 101
branch  4 taken 100
branch  5 taken 1 (fallthrough)
      100:  179:        auto it2=it;
      100:  180:        ++it2;
      100:  180-block  0
call    0 returned 100
      100:  181:        if (it2!=disciplineSortateDupaOre.end()) {
call    0 returned 100
call    1 returned 100
branch  2 taken 99 (fallthrough)
branch  3 taken 1
      99*:  182:            assert(it->getNrOre()<=it2->getNrOre());
       99:  182-block  0
call    0 returned 99
call    1 returned 99
branch  2 taken 99 (fallthrough)
branch  3 taken 0 (throw)
       99:  182-block  1
call    4 returned 99
call    5 returned 99
branch  6 taken 99 (fallthrough)
branch  7 taken 0 (throw)
       99:  182-block  2
branch  8 taken 0 (fallthrough)
branch  9 taken 99
    %%%%%:  182-block  3
call   10 never executed
       99:  182-block  4
        -:  183:        }
        -:  184:    }
        -:  185:    //test sortareDisciplineDupaDenumire
        1:  186:    const vector<Disciplina> disciplineSortateDupaDenumire=s.sortareDisciplineDupaDenumire();
        1:  186-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  187:    assert(disciplineSortateDupaDenumire.size()==100);
        1:  187-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  187-block  1
call    3 never executed
        1:  187-block  2
      101:  188:    for (auto it=disciplineSortateDupaDenumire.begin();it!=disciplineSortateDupaDenumire.end();++it) {
        1:  188-block  0
call    0 returned 1
      100:  188-block  1
call    1 returned 100
      101:  188-block  2
call    2 returned 101
call    3 returned 101
branch  4 taken 100
branch  5 taken 1 (fallthrough)
      100:  189:        auto it2=it;
      100:  190:        ++it2;
      100:  190-block  0
call    0 returned 100
      100:  191:        if (it2!=disciplineSortateDupaDenumire.end()) {
call    0 returned 100
call    1 returned 100
branch  2 taken 99 (fallthrough)
branch  3 taken 1
      99*:  192:            assert(it->getDenumire()<=it2->getDenumire());
       99:  192-block  0
call    0 returned 99
call    1 returned 99
call    2 returned 99
branch  3 taken 99 (fallthrough)
branch  4 taken 0 (throw)
       99:  192-block  1
call    5 returned 99
call    6 returned 99
branch  7 taken 99 (fallthrough)
branch  8 taken 0 (throw)
       99:  192-block  2
call    9 returned 99
call   10 returned 99
branch 11 taken 0 (fallthrough)
branch 12 taken 99
    %%%%%:  192-block  3
call   13 never executed
       99:  192-block  4
       99:  192-block  5
branch 14 taken 99 (fallthrough)
branch 15 taken 0
       99:  192-block  6
call   16 returned 99
       99:  192-block  7
branch 17 taken 99 (fallthrough)
branch 18 taken 0
       99:  192-block  8
call   19 returned 99
       99:  192-block  9
    $$$$$:  192-block 10
branch 20 never executed (fallthrough)
branch 21 never executed
    $$$$$:  192-block 11
call   22 never executed
    $$$$$:  192-block 12
    $$$$$:  192-block 13
branch 23 never executed (fallthrough)
branch 24 never executed
    $$$$$:  192-block 14
call   25 never executed
    $$$$$:  192-block 15
    $$$$$:  192-block 16
        -:  193:        }
        -:  194:    }
        -:  195:    //test sortareDisciplineDupaTipSiCadruDidactic
       11:  196:    for (int i = 0;i<10;i++) {
        1:  196-block  0
       11:  196-block  1
branch  0 taken 10
branch  1 taken 1 (fallthrough)
       20:  197:        s.addDisciplinaService("mate"+std::to_string(i),i,"laborator"+std::to_string(i),"popescu");
       10:  197-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:  197-block  1
call    3 returned 10
call    4 returned 10
branch  5 taken 10 (fallthrough)
branch  6 taken 0 (throw)
       10:  197-block  2
call    7 returned 10
call    8 returned 10
branch  9 taken 10 (fallthrough)
branch 10 taken 0 (throw)
       10:  197-block  3
call   11 returned 10
branch 12 taken 10 (fallthrough)
branch 13 taken 0 (throw)
       10:  197-block  4
call   14 returned 10
call   15 returned 10
call   16 returned 10
call   17 returned 10
call   18 returned 10
       10:  197-block  5
    $$$$$:  197-block  6
call   19 never executed
    $$$$$:  197-block  7
call   20 never executed
    $$$$$:  197-block  8
    $$$$$:  197-block  9
    $$$$$:  197-block 10
call   21 never executed
    $$$$$:  197-block 11
call   22 never executed
    $$$$$:  197-block 12
    $$$$$:  197-block 13
    $$$$$:  197-block 14
call   23 never executed
    $$$$$:  197-block 15
    $$$$$:  197-block 16
        -:  198:    }
        1:  199:    const vector<Disciplina> disciplineSortateDupaTipSiCadruDidactic=s.sortareDisciplineDupaTipSiCadruDidactic();
        1:  199-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  200:    assert(disciplineSortateDupaTipSiCadruDidactic.size()==110);
        1:  200-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  200-block  1
call    3 never executed
        1:  200-block  2
      111:  201:    for (auto it=disciplineSortateDupaTipSiCadruDidactic.begin();it!=disciplineSortateDupaTipSiCadruDidactic.end();++it) {
        1:  201-block  0
call    0 returned 1
      110:  201-block  1
call    1 returned 110
      111:  201-block  2
call    2 returned 111
call    3 returned 111
branch  4 taken 110
branch  5 taken 1 (fallthrough)
      110:  202:        auto it2=it;
      110:  203:        ++it2;
      110:  203-block  0
call    0 returned 110
      110:  204:        if (it2!=disciplineSortateDupaTipSiCadruDidactic.end()) {
call    0 returned 110
call    1 returned 110
branch  2 taken 109 (fallthrough)
branch  3 taken 1
      109:  205:            if (it->getTip()==it2->getTip()) {
      109:  205-block  0
call    0 returned 109
call    1 returned 109
branch  2 taken 109 (fallthrough)
branch  3 taken 0 (throw)
      109:  205-block  1
call    4 returned 109
call    5 returned 109
branch  6 taken 109 (fallthrough)
branch  7 taken 0 (throw)
      109:  205-block  2
call    8 returned 109
call    9 returned 109
call   10 returned 109
branch 11 taken 99 (fallthrough)
branch 12 taken 10
    $$$$$:  205-block  3
    $$$$$:  205-block  4
call   13 never executed
    $$$$$:  205-block  5
      99*:  206:                assert(it->getCadruDidactic()<=it2->getCadruDidactic());
       99:  206-block  0
call    0 returned 99
call    1 returned 99
call    2 returned 99
branch  3 taken 99 (fallthrough)
branch  4 taken 0 (throw)
       99:  206-block  1
call    5 returned 99
call    6 returned 99
branch  7 taken 99 (fallthrough)
branch  8 taken 0 (throw)
       99:  206-block  2
call    9 returned 99
call   10 returned 99
branch 11 taken 0 (fallthrough)
branch 12 taken 99
    %%%%%:  206-block  3
call   13 never executed
       99:  206-block  4
       99:  206-block  5
branch 14 taken 99 (fallthrough)
branch 15 taken 0
       99:  206-block  6
call   16 returned 99
       99:  206-block  7
branch 17 taken 99 (fallthrough)
branch 18 taken 0
       99:  206-block  8
call   19 returned 99
       99:  206-block  9
    $$$$$:  206-block 10
branch 20 never executed (fallthrough)
branch 21 never executed
    $$$$$:  206-block 11
call   22 never executed
    $$$$$:  206-block 12
    $$$$$:  206-block 13
branch 23 never executed (fallthrough)
branch 24 never executed
    $$$$$:  206-block 14
call   25 never executed
    $$$$$:  206-block 15
    $$$$$:  206-block 16
        -:  207:            }
        -:  208:        }
        -:  209:    }
        -:  210:    //test adauga disciplina in contract
        6:  211:    s.addDisciplinaService("matematica",5,"tip","cadru");
        1:  211-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  211-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  211-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  211-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  211-block  4
call   12 returned 1
        1:  211-block  5
call   13 returned 1
        1:  211-block  6
call   14 returned 1
        1:  211-block  7
    $$$$$:  211-block  8
call   15 never executed
    $$$$$:  211-block  9
    $$$$$:  211-block 10
    $$$$$:  211-block 11
call   16 never executed
    $$$$$:  211-block 12
    $$$$$:  211-block 13
    $$$$$:  211-block 14
call   17 never executed
    $$$$$:  211-block 15
    $$$$$:  211-block 16
        1:  212:    s.adaugaDisciplinaContractService("matematica");
        1:  212-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  212-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  212-block  2
call    6 returned 1
    $$$$$:  212-block  3
call    7 never executed
    $$$$$:  212-block  4
    $$$$$:  212-block  5
       1*:  213:    assert(s.getContractSize()==1);
        1:  213-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  213-block  1
call    3 never executed
        1:  213-block  2
       1*:  214:    assert(s.getContract().getAll()[0].getDenumire()=="matematica");
        1:  214-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  214-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  214-block  2
branch  9 taken 0 (fallthrough)
branch 10 taken 1
    %%%%%:  214-block  3
call   11 never executed
        1:  214-block  4
        1:  214-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:  214-block  6
call   14 returned 1
        1:  214-block  7
    $$$$$:  214-block  8
branch 15 never executed (fallthrough)
branch 16 never executed
    $$$$$:  214-block  9
call   17 never executed
    $$$$$:  214-block 10
        -:  215:    try {
       2*:  216:        s.adaugaDisciplinaContractService("");
        1:  216-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  216-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  216-block  2
call    6 never executed
    %%%%%:  216-block  3
        1:  216-block  4
call    7 returned 1
        1:  216-block  5
        1:  216-block  6
        -:  217:        //assert(false);
        1:  218:    }catch (ValidationError&) {
        1:  218-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  218-block  1
call    2 returned 1
        -:  219:        assert(true);
        1:  220:    }
call    0 returned 1
        -:  221:    try {
       2*:  222:        s.adaugaDisciplinaContractService("salut");
        1:  222-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  222-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1 (throw)
    %%%%%:  222-block  2
call    6 never executed
    %%%%%:  222-block  3
        1:  222-block  4
call    7 returned 1
        1:  222-block  5
        1:  222-block  6
        -:  223:        //assert(false);
        1:  224:    }catch (ServiceException&) {
        1:  224-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  224-block  1
call    2 returned 1
        -:  225:        assert(true);
        1:  226:    }
call    0 returned 1
        -:  227:
        -:  228:    //test goleste contract
        -:  229:
        1:  230:    s.golesteContractService();
        1:  230-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  231:    assert(s.getContractSize()==0);
        1:  231-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  231-block  1
call    3 never executed
        1:  231-block  2
        -:  232:
        -:  233:    //test genereaza contract
        -:  234:
      101:  235:    for (int i = 0;i<100;i++) {
        1:  235-block  0
      101:  235-block  1
branch  0 taken 100
branch  1 taken 1 (fallthrough)
      400:  236:        s.addDisciplinaService("mat"+std::to_string(i),i,"laborator","popescu");
      100:  236-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  236-block  1
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:  236-block  2
call    6 returned 100
call    7 returned 100
branch  8 taken 100 (fallthrough)
branch  9 taken 0 (throw)
      100:  236-block  3
call   10 returned 100
branch 11 taken 100 (fallthrough)
branch 12 taken 0 (throw)
      100:  236-block  4
call   13 returned 100
call   14 returned 100
call   15 returned 100
      100:  236-block  5
call   16 returned 100
      100:  236-block  6
    $$$$$:  236-block  7
call   17 never executed
    $$$$$:  236-block  8
call   18 never executed
    $$$$$:  236-block  9
    $$$$$:  236-block 10
    $$$$$:  236-block 11
call   19 never executed
    $$$$$:  236-block 12
    $$$$$:  236-block 13
    $$$$$:  236-block 14
call   20 never executed
    $$$$$:  236-block 15
    $$$$$:  236-block 16
        -:  237:    }
        1:  238:    s.genereazaContractService(50);
        1:  238-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  239:    assert(s.getContractSize()==50);
        1:  239-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  239-block  1
call    3 never executed
        1:  239-block  2
        -:  240:    try {
        1:  241:        s.genereazaContractService(1000);
        1:  241-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  242:        //assert(false);
        1:  243:    }catch (ServiceException &e) {
        1:  243-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  243-block  1
call    2 returned 1
        -:  244:        assert(true);
        1:  245:    }
call    0 returned 1
        -:  246:    try {
        1:  247:        s.genereazaContractService(-1);
        1:  247-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  248:        //assert(false);
        1:  249:    }catch (ValidationError& e) {
        1:  249-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  249-block  1
call    2 returned 1
        -:  250:        assert(true);
        1:  251:    }
call    0 returned 1
        -:  252:    //test statistici
        1:  253:    Repo r2;
        1:  254:    Service s2(r2,v);
        1:  254-block  0
call    0 returned 1
      101:  255:    for (int i = 0;i<100;i++) {
      101:  255-block  0
branch  0 taken 100
branch  1 taken 1 (fallthrough)
      400:  256:        s2.addDisciplinaService("mat"+std::to_string(i),i,"laborator","popescu");
      100:  256-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  256-block  1
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:  256-block  2
call    6 returned 100
call    7 returned 100
branch  8 taken 100 (fallthrough)
branch  9 taken 0 (throw)
      100:  256-block  3
call   10 returned 100
branch 11 taken 100 (fallthrough)
branch 12 taken 0 (throw)
      100:  256-block  4
call   13 returned 100
call   14 returned 100
call   15 returned 100
      100:  256-block  5
call   16 returned 100
      100:  256-block  6
    $$$$$:  256-block  7
call   17 never executed
    $$$$$:  256-block  8
call   18 never executed
    $$$$$:  256-block  9
    $$$$$:  256-block 10
    $$$$$:  256-block 11
call   19 never executed
    $$$$$:  256-block 12
    $$$$$:  256-block 13
    $$$$$:  256-block 14
call   20 never executed
    $$$$$:  256-block 15
    $$$$$:  256-block 16
        -:  257:    }
        1:  258:    const auto& statistica=s2.statistici();
        1:  258-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  259:    assert(statistica.size()==100);
        1:  259-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1
    %%%%%:  259-block  1
call    3 never executed
        1:  259-block  2
      101:  260:    for (const auto& [cheie,val]:statistica) {
        1:  260-block  0
call    0 returned 1
call    1 returned 1
      100:  260-block  1
call    2 returned 100
call    3 returned 100
call    4 returned 100
      100:  260-block  2
call    5 returned 100
      101:  260-block  3
call    6 returned 101
branch  7 taken 100
branch  8 taken 1 (fallthrough)
     100*:  261:        assert(val==1);
branch  0 taken 0 (fallthrough)
branch  1 taken 100
    %%%%%:  261-block  0
call    2 never executed
      100:  261-block  1
        -:  262:    }
        -:  263:    //test undo
        -:  264:
      101:  265:    for (int i = 99;i>=0;i--) {
        1:  265-block  0
      100:  265-block  1
      101:  265-block  2
branch  0 taken 100
branch  1 taken 1 (fallthrough)
      100:  266:        s2.undo();
      100:  266-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
     100*:  267:        assert(s2.getAll().size()==i);
      100:  267-block  0
call    0 returned 100
call    1 returned 100
branch  2 taken 0 (fallthrough)
branch  3 taken 100
    %%%%%:  267-block  1
call    4 never executed
      100:  267-block  2
        -:  268:    }
        -:  269:    try {
        1:  270:        s2.undo();
        1:  270-block  0
call    0 returned 1
branch  1 taken 0 (fallthrough)
branch  2 taken 1 (throw)
        -:  271:        //assert(false);
        1:  272:    }catch (ServiceException&) {
        1:  272-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  272-block  1
call    2 returned 1
        -:  273:        assert(true);
        1:  274:    }
call    0 returned 1
      101:  275:    for (int i = 0;i<100;i++) {
        1:  275-block  0
      101:  275-block  1
branch  0 taken 100
branch  1 taken 1 (fallthrough)
      400:  276:        s2.addDisciplinaService("mat"+std::to_string(i),i,"laborator","popescu");
      100:  276-block  0
call    0 returned 100
branch  1 taken 100 (fallthrough)
branch  2 taken 0 (throw)
      100:  276-block  1
call    3 returned 100
branch  4 taken 100 (fallthrough)
branch  5 taken 0 (throw)
      100:  276-block  2
call    6 returned 100
call    7 returned 100
branch  8 taken 100 (fallthrough)
branch  9 taken 0 (throw)
      100:  276-block  3
call   10 returned 100
branch 11 taken 100 (fallthrough)
branch 12 taken 0 (throw)
      100:  276-block  4
call   13 returned 100
call   14 returned 100
call   15 returned 100
      100:  276-block  5
call   16 returned 100
      100:  276-block  6
    $$$$$:  276-block  7
call   17 never executed
    $$$$$:  276-block  8
call   18 never executed
    $$$$$:  276-block  9
    $$$$$:  276-block 10
    $$$$$:  276-block 11
call   19 never executed
    $$$$$:  276-block 12
    $$$$$:  276-block 13
    $$$$$:  276-block 14
call   20 never executed
    $$$$$:  276-block 15
    $$$$$:  276-block 16
        -:  277:    }
        9:  278:    s2.modificaDisciplinaService("mat0","laborator","mat0","laborator",5,"popescu");
        1:  278-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  278-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  278-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  278-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:  278-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:  278-block  5
call   15 returned 1
branch 16 taken 1 (fallthrough)
branch 17 taken 0 (throw)
        1:  278-block  6
call   18 returned 1
        1:  278-block  7
call   19 returned 1
        1:  278-block  8
call   20 returned 1
        1:  278-block  9
call   21 returned 1
        1:  278-block 10
call   22 returned 1
    $$$$$:  278-block 11
call   23 never executed
    $$$$$:  278-block 12
    $$$$$:  278-block 13
    $$$$$:  278-block 14
call   24 never executed
    $$$$$:  278-block 15
    $$$$$:  278-block 16
    $$$$$:  278-block 17
call   25 never executed
    $$$$$:  278-block 18
    $$$$$:  278-block 19
    $$$$$:  278-block 20
call   26 never executed
    $$$$$:  278-block 21
    $$$$$:  278-block 22
    $$$$$:  278-block 23
call   27 never executed
    $$$$$:  278-block 24
    $$$$$:  278-block 25
        1:  279:    s2.undo();
        1:  279-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  280:    assert(s2.getAll().size()==100);
        1:  280-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  280-block  1
call    4 never executed
        1:  280-block  2
       1*:  281:    assert(s2.getAll()[0].getNrOre()==0);
        1:  281-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  281-block  1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  281-block  2
call    7 never executed
        1:  281-block  3
        3:  282:    s2.stergeDisciplinaService("mat0","laborator");
        1:  282-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  282-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  282-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  282-block  3
call    9 returned 1
        1:  282-block  4
call   10 returned 1
    $$$$$:  282-block  5
call   11 never executed
    $$$$$:  282-block  6
    $$$$$:  282-block  7
    $$$$$:  282-block  8
call   12 never executed
    $$$$$:  282-block  9
    $$$$$:  282-block 10
        1:  283:    s2.undo();
        1:  283-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:  284:    assert(s2.getAll().size()==100);
        1:  284-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 0 (fallthrough)
branch  3 taken 1
    %%%%%:  284-block  1
call    4 never executed
        1:  284-block  2
        -:  285:
        1:  286:}
        1:  286-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
call    7 returned 1
call    8 returned 1
call    9 returned 1
call   10 returned 1
call   11 returned 1
    $$$$$:  286-block  1
call   12 never executed
    $$$$$:  286-block  2
call   13 never executed
    $$$$$:  286-block  3
call   14 never executed
    $$$$$:  286-block  4
call   15 never executed
    $$$$$:  286-block  5
call   16 never executed
    $$$$$:  286-block  6
call   17 never executed
    $$$$$:  286-block  7
call   18 never executed
    $$$$$:  286-block  8
call   19 never executed
    $$$$$:  286-block  9
call   20 never executed
    $$$$$:  286-block 10
call   21 never executed
    $$$$$:  286-block 11
call   22 never executed
    $$$$$:  286-block 12
call   23 never executed
